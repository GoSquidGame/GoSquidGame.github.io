{"version":3,"sources":["config.js","getPOSClient.js","instruction.js","App.js","serviceWorker.js","index.js","../node_modules/@maticnetwork/meta/network sync /^/.//.*//index/.json$","../node_modules/@maticnetwork/meta/network sync /^/.//.*/.json$"],"names":["module","exports","testnet","nftCardAddress","leedoCoinAddress","leedoVaultAddress","maticCoinAddress","maticNFTAddress","raffleAddress","erc20PredicateAddress","erc721PredicateAddress","rootChainManagerAddress","childChainManagerAddress","L1ChainID","L2ChainID","leedoCoinDecimals","maticCoinDecimals","parentProvider","maticProvider","leedoFaucetAddress","leedoBridgeServerAddress","mainnet","abi","SquidNFTABI","LeedoCoinABI","RootChainManagerABI","LeedoFaucetABI","MaticNFTABI","MaticCoinABI","getPOSClient","MaticPOSClient","network","version","ShowInstruction","useState","show","setShow","Alert","variant","onClose","dismissible","Heading","href","target","Button","onClick","currentConfig","config","rootChainID","childChainID","networkList","getElem","elemId","document","getElementById","burnTxTableHeader","name","selector","row","BurnTx","width","Amount","sortable","Claimed","CreatedAt","postData","a","url","data","fetch","method","mode","cache","headers","redirect","referrer","body","JSON","stringify","then","response","json","App","state","loaded","chainId","leedoBalance","leedoMaticBalance","myAddress","leedoAddress","maticConnected","depositProgress","burnProgress","exitProgress","burnTxTableContents","componentDidMount","window","ethereum","startApp","watchChainAccount","accounts","length","connectWallet","provider","ethers","providers","Web3Provider","getNetwork","networkId","switchToRootChain","signer","getSigner","getAddress","account","leedoInstance","Contract","rcmInstance","address","utils","balanceOf","formatUnits","setState","res","burntxlist","burnTxList","i","alert","console","error","on","request","switchToChildChain","params","toString","code","rpcUrl","log","leedoMaticInstance","switchNetwork","eventKey","claimFaucet","innerHTML","leedoFaucetInstance","claim","tx","wait","message","depositToMatic","_depositAmount","value","isNaN","parseInt","depositAmount","parseUnits","currentBalance","gt","approve","abiCoder","AbiCoder","depositData","encode","depositFor","withdrawBurn","_withdrawAmount","withdrawAmount","withdraw","hash","burntx","amount","claimed","catch","withdrawExit","burnTxHash","maticPOSClient","exitERC20","from","encodeAbi","exitCalldata","sendTransaction","to","this","className","Tabs","defaultActiveKey","onSelect","id","Tab","title","InputGroup","FormControl","type","placeholder","ProgressBar","striped","now","label","disabled","columns","keyField","defaultSortFieldId","defaultSortAsc","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"static/js/main.fca38d28.chunk.js","sourcesContent":["\nmodule.exports = {\n    testnet: {  // goerli\n        nftCardAddress: '0xC814aFD17170d2A8c02C9f0E8B7bA8Bf96aB75Ff', // goerli nft\n        leedoCoinAddress: '0xbC66FB9821A757a684364266Fb856513A189dbF7',  // goerli erc20 (LEEDO)\n        leedoVaultAddress: '0xBF6CC26C2cA10B59AA68fca6EdAc0773cE306c97', // goerli vault\n        maticCoinAddress: '0xCa5DdD47F2f321ae54610d20BD29D1ff6F9bAE97', // matic mumbai coin (mapped with goerli coin)\n        maticNFTAddress: '0x2E39443148785c9be0d7343799Ed48672381e056', // matic mumbai nft (mapped with goerli vault)\n        raffleAddress: \"0xb109173Ab57Dab7F954Ef8F10D87a5bFDB740EEB\", //mainnet\n        erc20PredicateAddress: \"0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34\", // goerli, approve --> transfer & lock\n        erc721PredicateAddress: \"0x74D83801586E9D3C4dc45FfCD30B54eA9C88cf9b\", // goerli, approve --> transfer & lock\n        rootChainManagerAddress: '0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74', // goerli, depostFor callee\n        childChainManagerAddress: '0xb5505a6d998549090530911180f38aC5130101c6', // mumbai\n        L1ChainID: 5,    // ethereum goerli\n        L2ChainID: 80001,   // matic mumbai\n        leedoCoinDecimals: 18,\n        maticCoinDecimals: 18,\n        parentProvider: `https://goerli.infura.io/v3/`,\n        maticProvider: `https://rpc-mumbai.maticvigil.com/`,\n        leedoFaucetAddress: '0x1C2eB54997aD433D82D41e028eDa71eEcAAd2eE3', // goerli faucet\n        leedoBridgeServerAddress: 'https://api.gosquidgame.com/',\n    },\n    mainnet: {\n        nftCardAddress: '0xBE5C953DD0ddB0Ce033a98f36C981F1B74d3B33f', // mainnet nft\n        leedoCoinAddress: '0x3eEde143aDb9a80c6a44C63dad76269D33e2C8d1',  // mainnet erc20 (LEEDO)\n        leedoVaultAddress: '0x0866f2af4cf0b601A1a2c4eBD56CBB954a1cF004', // mainnet vault\n        maticCoinAddress: '', // matic polygon coin (mapped with mainnet coin)\n        maticNFTAddress: '', // matic polygon nft (mapped with mainnet vault)\n        raffleAddress: \"0xb109173Ab57Dab7F954Ef8F10D87a5bFDB740EEB\", //mainnet\n        erc20PredicateAddress: \"0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf\", // mainnet, approve --> transfer & lock\n        erc721PredicateAddress: \"0xE6F45376f64e1F568BD1404C155e5fFD2F80F7AD\", // mainnet, approve --> transfer & lock\n        rootChainManagerAddress: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77', // mainnet, depostFor callee\n        childChainManagerAddress: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa', // polygon\n        L1ChainID: 1,    // ethereum mainnet\n        L2ChainID: 137,   // polygon\n        leedoCoinDecimals: 18,\n        maticCoinDecimals: 18,\n        parentProvider: `https://eth-mainnet.alchemyapi.io/v2/`,\n        maticProvider: `https://matic-mainnet.chainstacklabs.com/`,\n    },\n    abi: {\n        // ethereum L1\n        SquidNFTABI: [\n            \"function ownerOf(uint256 tokenId) external view returns (address)\",\n            \"function balanceOf(address owner) external view returns (uint256)\",\n            \"function getGenes(uint256 _tokenId) public view returns (uint8[8])\",\n            \"function getConsonants(uint256 _tokenId) public view returns (string[3])\",\n            \"function getConsonantsIndex(uint256 _tokenId) public view returns (uint8[3])\",\n            \"function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256)\",\n            \"function tokenURI(uint256 _tokenId) public view returns (string)\",\n            \"function claim() external\",\n        ],\n        LeedoCoinABI: [\n            \"function approve(address spender, uint256 amount) external returns (bool)\",\n            \"function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\",\n            \"function transfer(address recipient, uint256 amount) external returns (bool)\",\n            \"function balanceOf(address account) external view returns (uint256)\",\n            \"function totalSupply() external view returns (uint256)\",\n            \"function allowance(address owner, address spender) external view returns (uint256)\",\n        ],\n        RootChainManagerABI: [\n            \"function depositFor(address user, address rootToken, bytes calldata depositData) external\",\n        ],\n        LeedoFaucetABI: [\n            \"function tokenAddress() public view returns (address)\",\n            \"function setClaimAmount(uint _claimAmount) external\",\n            \"function claim() external\",\n            // \"function transferOwnership(address _newOwner) external\",\n        ],\n        // matic L2\n        MaticNFTABI: [\n            \"function updateChildChainManager(address newChildChainManagerProxy) external\",\n            \"function withdraw(uint256 tokenId) external\",\n            \"function withdrawBatch(uint256[] calldata tokenIds) external\",\n            \"function ownerOf(uint256 tokenId) external view returns (address)\",\n            \"function balanceOf(address owner) external view returns (uint256)\",\n            \"function getGenes(uint256 _tokenId) public view returns (uint8[8])\",\n            \"function getConsonants(uint256 _tokenId) public view returns (string[3])\",\n            \"function getConsonantsIndex(uint256 _tokenId) public view returns (uint8[3])\",\n            \"function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256)\",\n            \"function tokenURI(uint256 _tokenId) public view returns (string)\",\n        ],\n        MaticCoinABI: [\n            \"function approve(address spender, uint256 amount) external returns (bool)\",\n            \"function transferFrom(address sender, address recipient, uint256 amount) external returns (bool)\",\n            \"function transfer(address recipient, uint256 amount) external returns (bool)\",\n            \"function balanceOf(address account) external view returns (uint256)\",\n            \"function totalSupply() external view returns (uint256)\",\n            \"function allowance(address owner, address spender) external view returns (uint256)\",\n            \"function updateChildChainManager(address newChildChainManagerProxy) external\",\n            \"function deposit(address user, bytes calldata depositData) external\",\n            \"function withdraw(uint256 amount) external\",\n            \"event Transfer(address indexed from, address indexed to, uint256 value)\",\n        ],\n    },\n}\n","import { MaticPOSClient } from '@maticnetwork/maticjs'\n\nconst parentProvider = 'https://goerli.infura.io/v3/58a91f9437554be9ba02e3269a7b9a31'\nconst maticProvider = 'https://rpc-mumbai.maticvigil.com/v1/b4f231540ac5d1e8500e4e64e4bf94d73ae9b8c9'\n\n// const parentProvider = 'https://goerli.infura.io/v3'\n// const maticProvider = 'https://rpc-mumbai.maticvigil.com/v1'\n\n\nconst getPOSClient = () => {\n  return new MaticPOSClient({\n    network: 'testnet', // For mainnet change this to mainnet\n    version: 'mumbai', // For mainnet change this to v1\n    parentProvider: parentProvider,\n    maticProvider: maticProvider,\n  })\n}\n\nexport default getPOSClient;\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction ShowInstruction() {\n  const [show, setShow] = useState(false);\n\n  if (show) {\n    return (\n      <Alert variant=\"info\" onClose={() => setShow(false)} dismissible>\n        <Alert.Heading>\n          Deposit from Ethereum goerli to Matic mumbai\n        </Alert.Heading>\n        <b>In 'Ethereum --&gt; Matic' tab,</b>\n        <ul>\n          <li>[Claim from Faucet] you can claim up to 2 LEEDO (goerli).\n          </li>\n          <li>[Deposit to L2] it gives 'transfer' right of the deposit amount to the Matic contract, called erc20Predicate that will hold your tokens until withdrawal,\n            next your tokens are depositted to the Matic contract, and finally the same amount of tokens are minted in Matic.\n            <b>Note that you have to confirm two transactions in your wallet and your new tokens in Matic will be minted 5 to 20 minutes later</b>.\n          </li>\n        </ul>\n        <Alert.Heading>\n          Withdrawal from Matic mumbai to Ethereum goerli\n        </Alert.Heading>\n        <b>In 'Matic --&gt; Ethereum' tab,</b>\n        <ul>\n          <li><b>Note that you should add a matic mumbai network into your Metamask wallet first. \n          See <a href=\"https://docs.polygon.technology/docs/develop/metamask/config-polygon-on-metamask/\" target=\"_blank\">the mumbai section of Matic official docs</a></b>.\n          When selecting the 'Matic --&gt; Ethereum' tab, your wallet will request the change of network to Matic mumbai.</li>\n          <li>[Withdraw - Burn] it burns (i.e., removes) the tokens from the token contract in Matic and fill the transaction ID into the edit box under the [Withdraw - Exit] button.\n          </li>\n          <li>[Switch to Ethereum] it changes your wallet network into Ethereum goerli</li>\n          <li>[Withdraw - Exit] you need to copy a 'unclaimed' burn tx and paste it into the edit box. By pressing the button,\n            you can withdraw your tokens in Ethereum that has been locked by the Matic contract.&nbsp;\n            <b>Note that the transaction can be executed only after 20 to 60 minutes from the buring transaction in Matic (called checkpointing)</b>.\n          </li>\n          <li>Check if your tokens are back well.</li>\n        </ul>\n      </Alert>\n    );\n  }\n  return (\n    <Button variant=\"info\" onClick={() => setShow(true)}>\n      Instruction\n    </Button>\n  );\n}\n\nexport default ShowInstruction;\n","import React, { Component, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nimport getPOSClient from \"./getPOSClient\";\nimport ShowInstruction from \"./instruction\";\n\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Table from 'react-bootstrap/Table';\n// import BootstrapTable from \"react-bootstrap-table-next\";\nimport DataTable from 'react-data-table-component';\n\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport FormControl from 'react-bootstrap/FormControl';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\n\nimport config from './config';\n\nconst currentConfig = config.testnet;\nconst leedoCoinAddress = currentConfig.leedoCoinAddress;  // goerli erc20 (LEEDO)\nconst maticCoinAddress = currentConfig.maticCoinAddress;  // matic mumbai erc20 (LEEDO)\n\nconst leedoFaucetAddress = currentConfig.leedoFaucetAddress;\n\nconst erc20PredicateAddress = currentConfig.erc20PredicateAddress; // goerli mumbai, approve --> transfer & lock\nconst rootChainManagerAddress = currentConfig.rootChainManagerAddress; // goerli mumbai, depostFor callee\n\nconst LeedoCoinABI = config.abi.LeedoCoinABI;\nconst MaticCoinABI = config.abi.MaticCoinABI;\nconst RootChainManagerABI = config.abi.RootChainManagerABI;\nconst LeedoFaucetABI = config.abi.LeedoFaucetABI;\n\nconst rootChainID = currentConfig.L1ChainID;\nconst childChainID = currentConfig.L2ChainID;\n\nconst leedoBridgeServerAddress = currentConfig.leedoBridgeServerAddress;\n\nvar networkList = {\n  1: \"Mainnet\",\n  5: \"Goerli Testnet\",\n  137: \"Matic Polygon\",\n  80001: \"Matic Mumbai\"\n};\n\n/* helper function */\nfunction getElem(elemId) {\n  return document.getElementById(elemId);\n}\n\n// const datatimeOptions = {\n//   year: 'numeric', month: 'numeric', day: 'numeric',\n//   hour: 'numeric', minute: 'numeric', second: 'numeric',\n//   hour12: false,\n// };\n\n\nconst burnTxTableHeader = [\n  {\n      name: 'BurnTx',\n      selector: row => row.BurnTx,\n      width: \"400pt\",\n  },\n  {\n      name: 'Amount',\n      selector: row => row.Amount,\n      width: \"70pt\",\n      sortable: true,\n  },\n  {\n      name: 'Claimed',\n      selector: row => row.Claimed,\n      width: \"100pt\",\n      sortable: true,\n  },\n  {\n      name: 'CreatedAt',\n      selector: row => row.CreatedAt,\n      sortable: true,\n  },\n];\n\n\nconst postData = async (url = '', data = {}) => {\n    return fetch(url, {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, cors, *same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        // credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrer: 'no-referrer', // no-referrer, *client\n        body: JSON.stringify(data), // body data type must match \"Content-Type\" header\n    })\n    .then(response => response.json());\n};\n\n\nclass App extends Component {\n  state = {\n    loaded: false,\n    chainId: 0,\n    leedoBalance: 0,\n    leedoMaticBalance: 0,\n    myAddress: null,\n    leedoAddress: null,\n    maticConnected: false,\n    depositProgress: 0,\n    burnProgress: 0,\n    exitProgress: 0,\n    burnTxTableContents: [],\n  };\n\n  ////////////////\n  // init\n  ////////////////\n  componentDidMount = async () => {\n\n    if (typeof window.ethereum === 'undefined') {\n      return <div>You need an ethereum wallet extention to play this game ...</div>;\n    }\n    await this.startApp();\n    await this.watchChainAccount();\n  };\n\n  startApp = async () => {\n    try {\n\n      if ( !this.accounts || this.accounts.length === 0 ) {\n        await this.connectWallet();\n      }\n\n      this.provider = new ethers.providers.Web3Provider(window.ethereum);\n      this.networkId = (await this.provider.getNetwork()).chainId;\n      if ( this.networkId !== rootChainID ) {\n        await this.switchToRootChain();\n      }\n\n      this.networkId = (await this.provider.getNetwork()).chainId;\n      this.signer = this.provider.getSigner();\n      this.account = await this.signer.getAddress();\n\n      this.leedoInstance = new ethers.Contract(leedoCoinAddress, LeedoCoinABI, this.signer);\n      this.rcmInstance = new ethers.Contract(rootChainManagerAddress, RootChainManagerABI, this.signer);\n\n      this.setState({\n        chainId: this.networkId,\n        loaded: true,\n        myAddress: this.account,\n        leedoAddress: this.leedoInstance.address,\n        leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n        maticConnected: false,\n      });\n\n      let res = await postData(leedoBridgeServerAddress+\"query\", {address: this.account})\n\n      if (res !== null && res.burntxlist !== null) {\n\n        let burnTxList = res.burntxlist\n        for (let i = 0; i<burnTxList.length; i++) {\n          burnTxList[i].Claimed = (burnTxList[i].Claimed) ? 'Claimed' : 'Unclaimed';\n        }\n        this.setState({ burnTxTableContents: burnTxList });\n      }\n\n    } catch (error) {\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  }\n\n  watchChainAccount = async () => {\n    window.ethereum.on(\"accountsChanged\", (accounts) => {\n      // alert(\"Account changed\");\n      // this.signer = this.provider.getSigner();\n      // this.account = await this.signer.getAddress();\n\n      // this.setState({\n      //   myAddress: this.account,\n      // });\n      this.startApp();\n    });\n    window.ethereum.on(\"chainChanged\", (chainId) => {\n      // this.startApp();\n      // alert(\"Network changed to \" + chainId);\n    });\n    // window.ethereum.on(\"connect\", (connectInfo) => {\n    //   // alert(\"Connected to Ethereum network\");\n    // });      \n    window.ethereum.on(\"disconnect\", (error) => {\n      // alert(\"Disconnected from network\");\n    });      \n  }\n\n  ////////////////\n  // wallet ops\n  ////////////////\n  connectWallet = async () => {\n    this.accounts = await window.ethereum\n        .request({method: 'eth_requestAccounts'});\n  }\n\n  switchToChildChain = async () => {\n\n    try {\n      await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x'+childChainID.toString(16) }],\n      });\n\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{ chainId: '0x'+childChainID.toString(16), rpcUrl: currentConfig.maticProvider }],\n          });\n        } catch (addError) {\n          console.log(addError);\n        }\n      }\n    }\n\n    this.provider = new ethers.providers.Web3Provider(window.ethereum);\n    this.networkId = (await this.provider.getNetwork()).chainId;\n    this.signer = this.provider.getSigner();\n    this.account = await this.signer.getAddress();\n    this.leedoMaticInstance = new ethers.Contract(maticCoinAddress, MaticCoinABI, this.signer);\n\n    this.setState({\n      chainId: this.networkId,\n      leedoAddress: this.leedoMaticInstance.address,\n      leedoMaticBalance: ethers.utils.formatUnits(await this.leedoMaticInstance.balanceOf(this.account), 18),\n      maticConnected: true,\n      burnProgress: 0,\n      exitProgress: 0,\n    });\n  };\n\n  switchToRootChain = async () => {\n    try {\n      await ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0x'+rootChainID.toString(16) }],\n      });\n\n    } catch (switchError) {\n      if (switchError.code === 4902) {\n        try {\n          await ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{ chainId: '0x'+rootChainID.toString(16), rpcUrl: currentConfig.parentProvider }],\n          });\n        } catch (addError) {\n          console.log(addError);\n        }\n      }\n    }\n\n    this.provider = new ethers.providers.Web3Provider(window.ethereum);\n    this.networkId = (await this.provider.getNetwork()).chainId;\n    this.signer = this.provider.getSigner();\n    this.account = await this.signer.getAddress();\n    this.leedoInstance = new ethers.Contract(leedoCoinAddress, LeedoCoinABI, this.signer);\n\n    this.setState({\n      chainId: this.networkId,\n      leedoAddress: this.leedoInstance.address,\n      leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n      maticConnected: false,\n      depositProgress: 0,\n      exitProgress: 0,\n    });\n\n  };\n  \n  switchNetwork = async (eventKey) => {\n    if (eventKey === \"deposit\") {\n      await this.switchToRootChain();\n    } else {  // withdraw\n      await this.switchToChildChain();\n    }\n  }\n\n  ////////////////\n  // contract ops\n  ////////////////\n  claimFaucet = async () => {\n    if ( this.networkId !== rootChainID ) {\n      alert(\"Wrong network. Please change the network into Ethereum\")\n      return\n    }\n    try {\n      getElem(\"claimFaucetMessage\").innerHTML = \"please confirm in your wallet\";\n\n      let leedoFaucetInstance = new ethers.Contract(leedoFaucetAddress, LeedoFaucetABI, this.signer);\n      let tx = await leedoFaucetInstance.claim();\n\n      getElem(\"claimFaucetMessage\").innerHTML = \"waiting for claim tx confirmation ...\";\n      await tx.wait();\n\n      this.setState({\n        leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n      });\n  \n      getElem(\"claimFaucetMessage\").innerHTML = `LEEDO is transferred into your account. check your balance.`;\n    } catch (err) {\n      getElem(\"claimFaucetMessage\").innerHTML = `Error claiming faucet - ${err.message}. Hodlers having 2 LEEDO or more cannot claim`;\n    }\n  }\n\n  // approve and depositFrom for deposit\n  depositToMatic = async () => {\n    if ( this.networkId !== rootChainID ) {\n      alert(\"Wrong network. Please change the network into Ethereum\")\n      return\n    }\n    try {\n      const _depositAmount = getElem(\"depositAmount\").value\n      if (_depositAmount === \"\") {\n        alert(\"please input the amount to deposit\");\n        return;\n      }\n      if (isNaN(parseInt(_depositAmount, 10))) {\n        alert(\"please input a correct number format of the amount to deposit\");\n        return;\n      }\n\n      const depositAmount = ethers.utils.parseUnits(_depositAmount, currentConfig.leedoCoinDecimals);\n      const currentBalance = await this.leedoInstance.balanceOf(this.account);\n\n      if (depositAmount.gt(currentBalance)) {\n        alert(\"you do not have enough balance to deposit\");\n        return;\n      }\n\n      getElem(\"depositMessage\").innerHTML = \"please confirm in your wallet\";\n      this.setState({ depositProgress: 25 });\n\n      console.log(depositAmount);\n\n      let tx = await this.leedoInstance.approve(erc20PredicateAddress, depositAmount);\n\n      getElem(\"depositMessage\").innerHTML = \"waiting for approval tx confirmation ...\";\n      this.setState({ depositProgress: 50 });\n      await tx.wait();\n      getElem(\"depositMessage\").innerHTML = \"approved. please confirm in your wallet again\";\n      this.setState({ depositProgress: 75 });\n\n      const abiCoder = new ethers.utils.AbiCoder();\n      const depositData = abiCoder.encode(['uint256'], [depositAmount.toString()]);\n      tx = await this.rcmInstance.depositFor(this.account, this.leedoInstance.address, depositData);\n\n      getElem(\"depositMessage\").innerHTML = \"waiting for depositFor tx confirmation ...\";\n      await tx.wait();\n\n      this.setState({\n        leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n        depositProgress: 100\n      });\n  \n      // console.log(`depositFor tx for amount ${depositAmount}`);\n      console.log(tx);\n  \n      getElem(\"depositMessage\").innerHTML = `${_depositAmount} LEEDO is transferred into Matic. check your balance in Matic 5 to 15 minutes later.`;\n    } catch (err) {\n      getElem(\"depositMessage\").innerHTML = 'Error depositting - ' + err.message;\n      this.setState({ depositProgress: 0 });\n    }\n  }\n\n  // burn for withdrawal\n  withdrawBurn = async () => {\n    if ( this.networkId !== childChainID ) {\n      alert(\"Wrong network. Please change the network into Matic\")\n      return\n    }\n    try {\n\n      const _withdrawAmount = getElem(\"withdrawAmount\").value\n      if (_withdrawAmount === \"\") {\n        alert(\"please input the amount to withdraw\");\n        return;\n      }\n      if (isNaN(parseInt(_withdrawAmount, 10))) {\n        alert(\"please input a correct number format of the amount to withdraw\");\n        return;\n      }\n\n      let withdrawAmount = ethers.utils.parseUnits(_withdrawAmount, currentConfig.maticCoinDecimals);\n      const currentBalance = await this.leedoMaticInstance.balanceOf(this.account);\n\n      if (withdrawAmount.gt(currentBalance)) {\n        alert(\"you do not have enough balance to withdraw\");\n        return;\n      }\n\n      getElem(\"withdrawMessage\").innerHTML = \"please confirm in your wallet\";\n      this.setState({ burnProgress: 33 });\n\n      let tx = await this.leedoMaticInstance.withdraw(withdrawAmount); // burn\n\n      getElem(\"withdrawMessage\").innerHTML = \"waiting for withdraw tx confirmation ...\";\n      this.setState({ burnProgress: 67 });\n      await tx.wait();\n\n      getElem(\"withdrawMessage\").innerHTML = `${_withdrawAmount} LEEDO is burned from Matic. Please switch to Ethereum and do exit tx 20 to 30 minutes later, your burn tx is ${tx.hash}`;\n      \n      this.setState({\n        leedoMaticBalance: ethers.utils.formatUnits(await this.leedoMaticInstance.balanceOf(this.account), 18),\n        burnProgress: 100,\n      });\n\n      getElem(\"burntx\").value = tx.hash\n\n      postData(leedoBridgeServerAddress+\"register\", {\n        address: this.account,\n        burntx: tx.hash,\n        amount: _withdrawAmount,\n        claimed: false,\n      })\n      .then(data => console.log(JSON.stringify(data))) // JSON-string from `response.json()` call\n      .catch(error => console.error(error));\n\n      let res = await postData(leedoBridgeServerAddress+\"query\", {address: this.account})\n\n      if (res !== null && res.burntxlist !== null) {\n\n        let burnTxList = res.burntxlist\n        for (let i = 0; i<burnTxList.length; i++) {\n          burnTxList[i].Claimed = (burnTxList[i].Claimed) ? 'Claimed' : 'Unclaimed';\n        }\n        this.setState({ burnTxTableContents: burnTxList });\n      }\n\n    } catch (err) {\n      getElem(\"withdrawMessage\").innerHTML = `Error calling withdraw - ${err.message}`;\n      this.setState({ burnProgress: 0 });\n    }\n  }\n\n  // exit for withdrawal\n  withdrawExit = async () => {\n    if ( this.networkId !== rootChainID ) {\n      alert(\"Wrong network. Please change the network into Ethereum\")\n      return\n    }\n    try {\n\n      getElem(\"exitMessage\").innerHTML = \"please confirm in your wallet\";\n      this.setState({ exitProgress: 33 });\n\n      const burnTxHash = getElem(\"burntx\").value\n\n      const maticPOSClient = getPOSClient();\n      const exitCalldata = await maticPOSClient\n        .exitERC20(burnTxHash, { from: this.state.myAddress, encodeAbi: true })\n\n      const tx = await this.signer.sendTransaction({\n        from: this.state.myAddress,\n        to: rootChainManagerAddress,\n        data: exitCalldata.data,\n      });\n    \n      getElem(\"exitMessage\").innerHTML = \"waiting for exit tx confirmation ...\";\n      this.setState({ exitProgress: 67 });\n\n      await tx.wait();\n\n      postData(leedoBridgeServerAddress+\"update\", {\n        burntx: burnTxHash,\n        claimed: true,\n      })\n      .then(data => console.log(JSON.stringify(data))) // JSON-string from `response.json()` call\n      .catch(error => console.error(error));\n\n      let res = await postData(leedoBridgeServerAddress+\"query\", {address: this.account})\n\n      if (res !== null && res.burntxlist !== null) {\n\n        let burnTxList = res.burntxlist\n        for (let i = 0; i<burnTxList.length; i++) {\n          burnTxList[i].Claimed = (burnTxList[i].Claimed) ? 'Claimed' : 'Unclaimed';\n        }\n        this.setState({\n          leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n          exitProgress: 100,\n          burnTxTableContents: burnTxList,\n        });\n      } else {\n        this.setState({\n          leedoBalance: ethers.utils.formatUnits(await this.leedoInstance.balanceOf(this.account), 18),\n          exitProgress: 100,\n        });\n      }\n\n      getElem(\"exitMessage\").innerHTML = `Your tokens are withdrawn from Matic. Check your balance in Ethereum`;\n\n    } catch (err) {\n      if (err.message === 'Returned error: execution reverted: RootChainManager: EXIT_ALREADY_PROCESSED') {\n        getElem(\"exitMessage\").innerHTML = `the tx ${getElem(\"burntx\").value} is already processed. check your LEEDO balance in Ethereum`;\n      } else {\n        getElem(\"exitMessage\").innerHTML = err.message;\n      }\n      this.setState({ exitProgress: 0 });\n    }\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return <div>Change your wallet network into Goerli testnet and press F5 ...</div>;\n    }\n    return (\n\n      <div className=\"App\">\n\n          <h1>LEEDO ERC20 Token Bridge (Ethereum goerli to Matic mumbai)</h1>\n          <ShowInstruction />\n          <hr />\n\n          <p>Current network is <b>{ networkList[this.state.chainId] }</b> having chain ID, {this.state.chainId}</p>\n          <p>Your Address is <b>{this.state.myAddress}</b></p>\n          <p>Your balance in Ethereum is <b>{ this.state.leedoBalance }</b> LEEDO  ({ leedoCoinAddress })</p>\n          <p>Your balance in Matic is <b>{ this.state.leedoMaticBalance }</b> LEEDO  ({ maticCoinAddress })</p>\n\n          <Tabs defaultActiveKey=\"deposit\" onSelect={this.switchNetwork} id=\"uncontrolled-tab-example\" className=\"mb-3\">\n\n            <Tab eventKey=\"deposit\" title=\"Ethereum --&gt; Matic\">\n\n              <p>\n                <Button onClick={this.claimFaucet} >Claim from Faucet</Button>\n                <div id=\"claimFaucetMessage\"></div>\n              </p>\n\n              <p>\n              <InputGroup className=\"mb-3\">\n                <Button onClick={this.depositToMatic} >Deposit to L2</Button>\n                <FormControl type=\"text\" id=\"depositAmount\" placeholder=\"deposit amount (LEEDO) ...\" />\n              </InputGroup>\n              <div id=\"depositMessage\"></div></p>\n              <p><ProgressBar striped variant=\"warning\" now={this.state.depositProgress} label={`${this.state.depositProgress}%`} /></p>\n\n            </Tab>\n\n            <Tab eventKey=\"withdraw\" title=\"Matic --&gt; Ethereum\">\n\n              <p>\n              <InputGroup className=\"mb-3\">\n                <Button onClick={this.withdrawBurn} disabled={!this.state.maticConnected} >Withdraw - Burn</Button>\n                <FormControl type=\"text\" id=\"withdrawAmount\" placeholder=\"withdraw amount (LEEDO) ...\" />\n              </InputGroup>\n              <div id=\"withdrawMessage\"></div></p>\n              <p><ProgressBar striped variant=\"danger\" now={this.state.burnProgress} label={`${this.state.burnProgress}%`} /></p>\n\n              <p><Button variant=\"dark\" onClick={this.switchToRootChain} >Switch to Ethereum</Button></p>\n\n              <p>\n              <InputGroup className=\"mb-3\">\n                <Button onClick={this.withdrawExit} disabled={this.state.maticConnected} >Withdraw - Exit</Button>&nbsp;\n                <FormControl type=\"text\" id=\"burntx\" placeholder=\"copy a 'Unclaimed' burntx below and paste it here ...\" />\n              </InputGroup>\n              <div id=\"exitMessage\"></div></p>\n              <p><ProgressBar striped variant=\"success\" now={this.state.exitProgress} label={`${this.state.exitProgress}%`} /></p>\n\n            </Tab>\n\n          </Tabs>\n\n          <DataTable\n                title='Withdraw History'\n                columns={ burnTxTableHeader }\n                data={ this.state.burnTxTableContents }\n                keyField='BurnTx'\n                defaultSortFieldId='Claimed'\n                defaultSortAsc={false}\n          />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","var map = {\n\t\"./mainnet/v1/index.json\": 200,\n\t\"./testnet/mumbai/index.json\": 201\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 339;","var map = {\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildToken.json\": 341,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20ChildTunnel.json\": 342,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootToken.json\": 343,\n\t\"./mainnet/v1/artifacts/fx-portal/FxERC20RootTunnel.json\": 344,\n\t\"./mainnet/v1/artifacts/genesis/BorValidatorSet.json\": 345,\n\t\"./mainnet/v1/artifacts/genesis/IStateReceiver.json\": 346,\n\t\"./mainnet/v1/artifacts/genesis/Migrations.json\": 347,\n\t\"./mainnet/v1/artifacts/genesis/StateReceiver.json\": 348,\n\t\"./mainnet/v1/artifacts/genesis/System.json\": 349,\n\t\"./mainnet/v1/artifacts/genesis/TestBorValidatorSet.json\": 350,\n\t\"./mainnet/v1/artifacts/genesis/TestCommitState.json\": 351,\n\t\"./mainnet/v1/artifacts/genesis/TestStateReceiver.json\": 352,\n\t\"./mainnet/v1/artifacts/genesis/TestSystem.json\": 353,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorSet.json\": 354,\n\t\"./mainnet/v1/artifacts/genesis/ValidatorVerifier.json\": 355,\n\t\"./mainnet/v1/artifacts/plasma/BaseERC20.json\": 356,\n\t\"./mainnet/v1/artifacts/plasma/ChainIdMixin.json\": 357,\n\t\"./mainnet/v1/artifacts/plasma/ChildChain.json\": 358,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20.json\": 359,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC20Proxified.json\": 360,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721.json\": 361,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Mintable.json\": 362,\n\t\"./mainnet/v1/artifacts/plasma/ChildERC721Proxified.json\": 363,\n\t\"./mainnet/v1/artifacts/plasma/ChildToken.json\": 364,\n\t\"./mainnet/v1/artifacts/plasma/ChildTokenProxy.json\": 365,\n\t\"./mainnet/v1/artifacts/plasma/Common.json\": 366,\n\t\"./mainnet/v1/artifacts/plasma/ContractReceiver.json\": 367,\n\t\"./mainnet/v1/artifacts/plasma/ContractWitRevertingFallback.json\": 368,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithFallback.json\": 369,\n\t\"./mainnet/v1/artifacts/plasma/ContractWithoutFallback.json\": 370,\n\t\"./mainnet/v1/artifacts/plasma/DelegateProxy.json\": 371,\n\t\"./mainnet/v1/artifacts/plasma/DepositManager.json\": 372,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerHeader.json\": 373,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerProxy.json\": 374,\n\t\"./mainnet/v1/artifacts/plasma/DepositManagerStorage.json\": 375,\n\t\"./mainnet/v1/artifacts/plasma/DrainStakeManager.json\": 376,\n\t\"./mainnet/v1/artifacts/plasma/Drainable.json\": 377,\n\t\"./mainnet/v1/artifacts/plasma/ECVerify.json\": 378,\n\t\"./mainnet/v1/artifacts/plasma/ERC165.json\": 379,\n\t\"./mainnet/v1/artifacts/plasma/ERC20.json\": 380,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Detailed.json\": 381,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Mintable.json\": 382,\n\t\"./mainnet/v1/artifacts/plasma/ERC20NonTransferable.json\": 383,\n\t\"./mainnet/v1/artifacts/plasma/ERC20Predicate.json\": 384,\n\t\"./mainnet/v1/artifacts/plasma/ERC20PredicateBurnOnly.json\": 385,\n\t\"./mainnet/v1/artifacts/plasma/ERC721.json\": 386,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Enumerable.json\": 387,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Full.json\": 388,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Metadata.json\": 389,\n\t\"./mainnet/v1/artifacts/plasma/ERC721MetadataMintable.json\": 390,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Mintable.json\": 391,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PlasmaMintable.json\": 392,\n\t\"./mainnet/v1/artifacts/plasma/ERC721Predicate.json\": 393,\n\t\"./mainnet/v1/artifacts/plasma/ERC721PredicateBurnOnly.json\": 394,\n\t\"./mainnet/v1/artifacts/plasma/ERCProxy.json\": 395,\n\t\"./mainnet/v1/artifacts/plasma/ExitNFT.json\": 396,\n\t\"./mainnet/v1/artifacts/plasma/FallbackManager.json\": 397,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafe.json\": 398,\n\t\"./mainnet/v1/artifacts/plasma/GnosisSafeProxy.json\": 399,\n\t\"./mainnet/v1/artifacts/plasma/Governable.json\": 400,\n\t\"./mainnet/v1/artifacts/plasma/Governance.json\": 401,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockable.json\": 402,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceLockableTest.json\": 403,\n\t\"./mainnet/v1/artifacts/plasma/GovernanceProxy.json\": 404,\n\t\"./mainnet/v1/artifacts/plasma/IDepositManager.json\": 405,\n\t\"./mainnet/v1/artifacts/plasma/IERC165.json\": 406,\n\t\"./mainnet/v1/artifacts/plasma/IERC20.json\": 407,\n\t\"./mainnet/v1/artifacts/plasma/IERC721.json\": 408,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Enumerable.json\": 409,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Metadata.json\": 410,\n\t\"./mainnet/v1/artifacts/plasma/IERC721Receiver.json\": 411,\n\t\"./mainnet/v1/artifacts/plasma/IErcPredicate.json\": 412,\n\t\"./mainnet/v1/artifacts/plasma/IGovernance.json\": 413,\n\t\"./mainnet/v1/artifacts/plasma/IParentToken.json\": 414,\n\t\"./mainnet/v1/artifacts/plasma/IPredicate.json\": 415,\n\t\"./mainnet/v1/artifacts/plasma/IRootChain.json\": 416,\n\t\"./mainnet/v1/artifacts/plasma/ISignatureValidator.json\": 417,\n\t\"./mainnet/v1/artifacts/plasma/ISlashingManager.json\": 418,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManager.json\": 419,\n\t\"./mainnet/v1/artifacts/plasma/IStakeManagerLocal.json\": 420,\n\t\"./mainnet/v1/artifacts/plasma/IValidatorShare.json\": 421,\n\t\"./mainnet/v1/artifacts/plasma/IWithdrawManager.json\": 422,\n\t\"./mainnet/v1/artifacts/plasma/LibEIP712Domain.json\": 423,\n\t\"./mainnet/v1/artifacts/plasma/LibTokenTransferOrder.json\": 424,\n\t\"./mainnet/v1/artifacts/plasma/Lockable.json\": 425,\n\t\"./mainnet/v1/artifacts/plasma/MRC20.json\": 426,\n\t\"./mainnet/v1/artifacts/plasma/Marketplace.json\": 427,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicate.json\": 428,\n\t\"./mainnet/v1/artifacts/plasma/MarketplacePredicateTest.json\": 429,\n\t\"./mainnet/v1/artifacts/plasma/MarketplaceToken.json\": 430,\n\t\"./mainnet/v1/artifacts/plasma/MasterCopy.json\": 431,\n\t\"./mainnet/v1/artifacts/plasma/MaticWETH.json\": 432,\n\t\"./mainnet/v1/artifacts/plasma/Merkle.json\": 433,\n\t\"./mainnet/v1/artifacts/plasma/Migrations.json\": 434,\n\t\"./mainnet/v1/artifacts/plasma/MintableERC721Predicate.json\": 435,\n\t\"./mainnet/v1/artifacts/plasma/MinterRole.json\": 436,\n\t\"./mainnet/v1/artifacts/plasma/Module.json\": 437,\n\t\"./mainnet/v1/artifacts/plasma/ModuleManager.json\": 438,\n\t\"./mainnet/v1/artifacts/plasma/Ownable.json\": 439,\n\t\"./mainnet/v1/artifacts/plasma/OwnableLockable.json\": 440,\n\t\"./mainnet/v1/artifacts/plasma/OwnerManager.json\": 441,\n\t\"./mainnet/v1/artifacts/plasma/ParentTokenMock.json\": 442,\n\t\"./mainnet/v1/artifacts/plasma/PredicateUtils.json\": 443,\n\t\"./mainnet/v1/artifacts/plasma/PriorityQueue.json\": 444,\n\t\"./mainnet/v1/artifacts/plasma/Proxy.json\": 445,\n\t\"./mainnet/v1/artifacts/plasma/ProxyStorage.json\": 446,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImpl.json\": 447,\n\t\"./mainnet/v1/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 448,\n\t\"./mainnet/v1/artifacts/plasma/Registry.json\": 449,\n\t\"./mainnet/v1/artifacts/plasma/RootChain.json\": 450,\n\t\"./mainnet/v1/artifacts/plasma/RootChainHeader.json\": 451,\n\t\"./mainnet/v1/artifacts/plasma/RootChainProxy.json\": 452,\n\t\"./mainnet/v1/artifacts/plasma/RootChainStorage.json\": 453,\n\t\"./mainnet/v1/artifacts/plasma/RootChainable.json\": 454,\n\t\"./mainnet/v1/artifacts/plasma/RootERC721.json\": 455,\n\t\"./mainnet/v1/artifacts/plasma/SlashingManager.json\": 456,\n\t\"./mainnet/v1/artifacts/plasma/StakeManager.json\": 457,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerProxy.json\": 458,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerStorage.json\": 459,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTest.json\": 460,\n\t\"./mainnet/v1/artifacts/plasma/StakeManagerTestable.json\": 461,\n\t\"./mainnet/v1/artifacts/plasma/StakingInfo.json\": 462,\n\t\"./mainnet/v1/artifacts/plasma/StakingNFT.json\": 463,\n\t\"./mainnet/v1/artifacts/plasma/StateReceiver.json\": 464,\n\t\"./mainnet/v1/artifacts/plasma/StateSender.json\": 465,\n\t\"./mainnet/v1/artifacts/plasma/StateSyncerVerifier.json\": 466,\n\t\"./mainnet/v1/artifacts/plasma/TestMRC20.json\": 467,\n\t\"./mainnet/v1/artifacts/plasma/TestToken.json\": 468,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigPredicate.json\": 469,\n\t\"./mainnet/v1/artifacts/plasma/TransferWithSigUtils.json\": 470,\n\t\"./mainnet/v1/artifacts/plasma/UpgradableProxy.json\": 471,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShare.json\": 472,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareFactory.json\": 473,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareProxy.json\": 474,\n\t\"./mainnet/v1/artifacts/plasma/ValidatorShareTest.json\": 475,\n\t\"./mainnet/v1/artifacts/plasma/WETH.json\": 476,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManager.json\": 477,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerHeader.json\": 478,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerProxy.json\": 479,\n\t\"./mainnet/v1/artifacts/plasma/WithdrawManagerStorage.json\": 480,\n\t\"./mainnet/v1/artifacts/pos/AccessControl.json\": 481,\n\t\"./mainnet/v1/artifacts/pos/AccessControlMixin.json\": 482,\n\t\"./mainnet/v1/artifacts/pos/ChainConstants.json\": 483,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManager.json\": 484,\n\t\"./mainnet/v1/artifacts/pos/ChildChainManagerProxy.json\": 485,\n\t\"./mainnet/v1/artifacts/pos/ChildERC1155.json\": 486,\n\t\"./mainnet/v1/artifacts/pos/ChildERC20.json\": 487,\n\t\"./mainnet/v1/artifacts/pos/ChildERC721.json\": 488,\n\t\"./mainnet/v1/artifacts/pos/ChildMintableERC721.json\": 489,\n\t\"./mainnet/v1/artifacts/pos/ChildTunnel.json\": 490,\n\t\"./mainnet/v1/artifacts/pos/DummyERC1155.json\": 491,\n\t\"./mainnet/v1/artifacts/pos/DummyERC20.json\": 492,\n\t\"./mainnet/v1/artifacts/pos/DummyERC721.json\": 493,\n\t\"./mainnet/v1/artifacts/pos/DummyMintableERC721.json\": 494,\n\t\"./mainnet/v1/artifacts/pos/DummyStateSender.json\": 495,\n\t\"./mainnet/v1/artifacts/pos/EIP712Base.json\": 496,\n\t\"./mainnet/v1/artifacts/pos/ERC1155.json\": 497,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Predicate.json\": 498,\n\t\"./mainnet/v1/artifacts/pos/ERC1155PredicateProxy.json\": 499,\n\t\"./mainnet/v1/artifacts/pos/ERC1155Receiver.json\": 500,\n\t\"./mainnet/v1/artifacts/pos/ERC165.json\": 501,\n\t\"./mainnet/v1/artifacts/pos/ERC20.json\": 502,\n\t\"./mainnet/v1/artifacts/pos/ERC20Predicate.json\": 503,\n\t\"./mainnet/v1/artifacts/pos/ERC20PredicateProxy.json\": 504,\n\t\"./mainnet/v1/artifacts/pos/ERC721.json\": 505,\n\t\"./mainnet/v1/artifacts/pos/ERC721Predicate.json\": 506,\n\t\"./mainnet/v1/artifacts/pos/ERC721PredicateProxy.json\": 507,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicate.json\": 508,\n\t\"./mainnet/v1/artifacts/pos/EtherPredicateProxy.json\": 509,\n\t\"./mainnet/v1/artifacts/pos/ICheckpointManager.json\": 510,\n\t\"./mainnet/v1/artifacts/pos/IChildChainManager.json\": 511,\n\t\"./mainnet/v1/artifacts/pos/IChildToken.json\": 512,\n\t\"./mainnet/v1/artifacts/pos/IERC1155.json\": 513,\n\t\"./mainnet/v1/artifacts/pos/IERC1155MetadataURI.json\": 514,\n\t\"./mainnet/v1/artifacts/pos/IERC1155Receiver.json\": 515,\n\t\"./mainnet/v1/artifacts/pos/IERC165.json\": 516,\n\t\"./mainnet/v1/artifacts/pos/IERC20.json\": 517,\n\t\"./mainnet/v1/artifacts/pos/IERC721.json\": 518,\n\t\"./mainnet/v1/artifacts/pos/IERC721Enumerable.json\": 519,\n\t\"./mainnet/v1/artifacts/pos/IERC721Metadata.json\": 520,\n\t\"./mainnet/v1/artifacts/pos/IERC721Receiver.json\": 521,\n\t\"./mainnet/v1/artifacts/pos/IERCProxy.json\": 522,\n\t\"./mainnet/v1/artifacts/pos/IMintableERC721.json\": 523,\n\t\"./mainnet/v1/artifacts/pos/IRootChainManager.json\": 524,\n\t\"./mainnet/v1/artifacts/pos/IStateSender.json\": 525,\n\t\"./mainnet/v1/artifacts/pos/ITokenPredicate.json\": 526,\n\t\"./mainnet/v1/artifacts/pos/MaticWETH.json\": 527,\n\t\"./mainnet/v1/artifacts/pos/Merkle.json\": 528,\n\t\"./mainnet/v1/artifacts/pos/MerklePatriciaTest.json\": 529,\n\t\"./mainnet/v1/artifacts/pos/Migrations.json\": 530,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155Predicate.json\": 531,\n\t\"./mainnet/v1/artifacts/pos/MintableERC1155PredicateProxy.json\": 532,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20Predicate.json\": 533,\n\t\"./mainnet/v1/artifacts/pos/MintableERC20PredicateProxy.json\": 534,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721Predicate.json\": 535,\n\t\"./mainnet/v1/artifacts/pos/MintableERC721PredicateProxy.json\": 536,\n\t\"./mainnet/v1/artifacts/pos/MockCheckpointManager.json\": 537,\n\t\"./mainnet/v1/artifacts/pos/NativeMetaTransaction.json\": 538,\n\t\"./mainnet/v1/artifacts/pos/NetworkAgnostic.json\": 539,\n\t\"./mainnet/v1/artifacts/pos/Proxy.json\": 540,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImpl.json\": 541,\n\t\"./mainnet/v1/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 542,\n\t\"./mainnet/v1/artifacts/pos/RootChainManager.json\": 543,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerProxy.json\": 544,\n\t\"./mainnet/v1/artifacts/pos/RootChainManagerStorage.json\": 545,\n\t\"./mainnet/v1/artifacts/pos/RootTunnel.json\": 546,\n\t\"./mainnet/v1/artifacts/pos/UpgradableProxy.json\": 547,\n\t\"./mainnet/v1/index.json\": 200,\n\t\"./networks.json\": 199,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildToken.json\": 548,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20ChildTunnel.json\": 549,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootToken.json\": 550,\n\t\"./testnet/mumbai/artifacts/fx-portal/FxERC20RootTunnel.json\": 551,\n\t\"./testnet/mumbai/artifacts/genesis/BorValidatorSet.json\": 552,\n\t\"./testnet/mumbai/artifacts/genesis/IStateReceiver.json\": 553,\n\t\"./testnet/mumbai/artifacts/genesis/Migrations.json\": 554,\n\t\"./testnet/mumbai/artifacts/genesis/StateReceiver.json\": 555,\n\t\"./testnet/mumbai/artifacts/genesis/System.json\": 556,\n\t\"./testnet/mumbai/artifacts/genesis/TestBorValidatorSet.json\": 557,\n\t\"./testnet/mumbai/artifacts/genesis/TestCommitState.json\": 558,\n\t\"./testnet/mumbai/artifacts/genesis/TestStateReceiver.json\": 559,\n\t\"./testnet/mumbai/artifacts/genesis/TestSystem.json\": 560,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorSet.json\": 561,\n\t\"./testnet/mumbai/artifacts/genesis/ValidatorVerifier.json\": 562,\n\t\"./testnet/mumbai/artifacts/plasma/BaseERC20.json\": 563,\n\t\"./testnet/mumbai/artifacts/plasma/ChainIdMixin.json\": 564,\n\t\"./testnet/mumbai/artifacts/plasma/ChildChain.json\": 565,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20.json\": 566,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC20Proxified.json\": 567,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721.json\": 568,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Mintable.json\": 569,\n\t\"./testnet/mumbai/artifacts/plasma/ChildERC721Proxified.json\": 570,\n\t\"./testnet/mumbai/artifacts/plasma/ChildToken.json\": 571,\n\t\"./testnet/mumbai/artifacts/plasma/ChildTokenProxy.json\": 572,\n\t\"./testnet/mumbai/artifacts/plasma/Common.json\": 573,\n\t\"./testnet/mumbai/artifacts/plasma/ContractReceiver.json\": 574,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWitRevertingFallback.json\": 575,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithFallback.json\": 576,\n\t\"./testnet/mumbai/artifacts/plasma/ContractWithoutFallback.json\": 577,\n\t\"./testnet/mumbai/artifacts/plasma/DelegateProxy.json\": 578,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManager.json\": 579,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerHeader.json\": 580,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerProxy.json\": 581,\n\t\"./testnet/mumbai/artifacts/plasma/DepositManagerStorage.json\": 582,\n\t\"./testnet/mumbai/artifacts/plasma/DrainStakeManager.json\": 583,\n\t\"./testnet/mumbai/artifacts/plasma/Drainable.json\": 584,\n\t\"./testnet/mumbai/artifacts/plasma/ECVerify.json\": 585,\n\t\"./testnet/mumbai/artifacts/plasma/ERC165.json\": 586,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20.json\": 587,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Detailed.json\": 588,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Mintable.json\": 589,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20NonTransferable.json\": 590,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20Predicate.json\": 591,\n\t\"./testnet/mumbai/artifacts/plasma/ERC20PredicateBurnOnly.json\": 592,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721.json\": 593,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Enumerable.json\": 594,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Full.json\": 595,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Metadata.json\": 596,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721MetadataMintable.json\": 597,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Mintable.json\": 598,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PlasmaMintable.json\": 599,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721Predicate.json\": 600,\n\t\"./testnet/mumbai/artifacts/plasma/ERC721PredicateBurnOnly.json\": 601,\n\t\"./testnet/mumbai/artifacts/plasma/ERCProxy.json\": 602,\n\t\"./testnet/mumbai/artifacts/plasma/ExitNFT.json\": 603,\n\t\"./testnet/mumbai/artifacts/plasma/FallbackManager.json\": 604,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafe.json\": 605,\n\t\"./testnet/mumbai/artifacts/plasma/GnosisSafeProxy.json\": 606,\n\t\"./testnet/mumbai/artifacts/plasma/Governable.json\": 607,\n\t\"./testnet/mumbai/artifacts/plasma/Governance.json\": 608,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockable.json\": 609,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceLockableTest.json\": 610,\n\t\"./testnet/mumbai/artifacts/plasma/GovernanceProxy.json\": 611,\n\t\"./testnet/mumbai/artifacts/plasma/IDepositManager.json\": 612,\n\t\"./testnet/mumbai/artifacts/plasma/IERC165.json\": 613,\n\t\"./testnet/mumbai/artifacts/plasma/IERC20.json\": 614,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721.json\": 615,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Enumerable.json\": 616,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Metadata.json\": 617,\n\t\"./testnet/mumbai/artifacts/plasma/IERC721Receiver.json\": 618,\n\t\"./testnet/mumbai/artifacts/plasma/IErcPredicate.json\": 619,\n\t\"./testnet/mumbai/artifacts/plasma/IGovernance.json\": 620,\n\t\"./testnet/mumbai/artifacts/plasma/IParentToken.json\": 621,\n\t\"./testnet/mumbai/artifacts/plasma/IPredicate.json\": 622,\n\t\"./testnet/mumbai/artifacts/plasma/IRootChain.json\": 623,\n\t\"./testnet/mumbai/artifacts/plasma/ISignatureValidator.json\": 624,\n\t\"./testnet/mumbai/artifacts/plasma/ISlashingManager.json\": 625,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManager.json\": 626,\n\t\"./testnet/mumbai/artifacts/plasma/IStakeManagerLocal.json\": 627,\n\t\"./testnet/mumbai/artifacts/plasma/IValidatorShare.json\": 628,\n\t\"./testnet/mumbai/artifacts/plasma/IWithdrawManager.json\": 629,\n\t\"./testnet/mumbai/artifacts/plasma/LibEIP712Domain.json\": 630,\n\t\"./testnet/mumbai/artifacts/plasma/LibTokenTransferOrder.json\": 631,\n\t\"./testnet/mumbai/artifacts/plasma/Lockable.json\": 632,\n\t\"./testnet/mumbai/artifacts/plasma/MRC20.json\": 633,\n\t\"./testnet/mumbai/artifacts/plasma/Marketplace.json\": 634,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicate.json\": 635,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplacePredicateTest.json\": 636,\n\t\"./testnet/mumbai/artifacts/plasma/MarketplaceToken.json\": 637,\n\t\"./testnet/mumbai/artifacts/plasma/MasterCopy.json\": 638,\n\t\"./testnet/mumbai/artifacts/plasma/MaticWETH.json\": 639,\n\t\"./testnet/mumbai/artifacts/plasma/Merkle.json\": 640,\n\t\"./testnet/mumbai/artifacts/plasma/Migrations.json\": 641,\n\t\"./testnet/mumbai/artifacts/plasma/MintableERC721Predicate.json\": 642,\n\t\"./testnet/mumbai/artifacts/plasma/MinterRole.json\": 643,\n\t\"./testnet/mumbai/artifacts/plasma/Module.json\": 644,\n\t\"./testnet/mumbai/artifacts/plasma/ModuleManager.json\": 645,\n\t\"./testnet/mumbai/artifacts/plasma/Ownable.json\": 646,\n\t\"./testnet/mumbai/artifacts/plasma/OwnableLockable.json\": 647,\n\t\"./testnet/mumbai/artifacts/plasma/OwnerManager.json\": 648,\n\t\"./testnet/mumbai/artifacts/plasma/ParentTokenMock.json\": 649,\n\t\"./testnet/mumbai/artifacts/plasma/PredicateUtils.json\": 650,\n\t\"./testnet/mumbai/artifacts/plasma/PriorityQueue.json\": 651,\n\t\"./testnet/mumbai/artifacts/plasma/Proxy.json\": 652,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyStorage.json\": 653,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImpl.json\": 654,\n\t\"./testnet/mumbai/artifacts/plasma/ProxyTestImplStorageLayoutChange.json\": 655,\n\t\"./testnet/mumbai/artifacts/plasma/Registry.json\": 656,\n\t\"./testnet/mumbai/artifacts/plasma/RootChain.json\": 657,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainHeader.json\": 658,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainProxy.json\": 659,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainStorage.json\": 660,\n\t\"./testnet/mumbai/artifacts/plasma/RootChainable.json\": 661,\n\t\"./testnet/mumbai/artifacts/plasma/RootERC721.json\": 662,\n\t\"./testnet/mumbai/artifacts/plasma/SlashingManager.json\": 663,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManager.json\": 664,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerProxy.json\": 665,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerStorage.json\": 666,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTest.json\": 667,\n\t\"./testnet/mumbai/artifacts/plasma/StakeManagerTestable.json\": 668,\n\t\"./testnet/mumbai/artifacts/plasma/StakingInfo.json\": 669,\n\t\"./testnet/mumbai/artifacts/plasma/StakingNFT.json\": 670,\n\t\"./testnet/mumbai/artifacts/plasma/StateReceiver.json\": 671,\n\t\"./testnet/mumbai/artifacts/plasma/StateSender.json\": 672,\n\t\"./testnet/mumbai/artifacts/plasma/StateSyncerVerifier.json\": 673,\n\t\"./testnet/mumbai/artifacts/plasma/TestMRC20.json\": 674,\n\t\"./testnet/mumbai/artifacts/plasma/TestToken.json\": 675,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigPredicate.json\": 676,\n\t\"./testnet/mumbai/artifacts/plasma/TransferWithSigUtils.json\": 677,\n\t\"./testnet/mumbai/artifacts/plasma/UpgradableProxy.json\": 678,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShare.json\": 679,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareFactory.json\": 680,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareProxy.json\": 681,\n\t\"./testnet/mumbai/artifacts/plasma/ValidatorShareTest.json\": 682,\n\t\"./testnet/mumbai/artifacts/plasma/WETH.json\": 683,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManager.json\": 684,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerHeader.json\": 685,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerProxy.json\": 686,\n\t\"./testnet/mumbai/artifacts/plasma/WithdrawManagerStorage.json\": 687,\n\t\"./testnet/mumbai/artifacts/pos/AccessControl.json\": 688,\n\t\"./testnet/mumbai/artifacts/pos/AccessControlMixin.json\": 689,\n\t\"./testnet/mumbai/artifacts/pos/ChainConstants.json\": 690,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManager.json\": 691,\n\t\"./testnet/mumbai/artifacts/pos/ChildChainManagerProxy.json\": 692,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC1155.json\": 693,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC20.json\": 694,\n\t\"./testnet/mumbai/artifacts/pos/ChildERC721.json\": 695,\n\t\"./testnet/mumbai/artifacts/pos/ChildMintableERC721.json\": 696,\n\t\"./testnet/mumbai/artifacts/pos/ChildTunnel.json\": 697,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC1155.json\": 698,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC20.json\": 699,\n\t\"./testnet/mumbai/artifacts/pos/DummyERC721.json\": 700,\n\t\"./testnet/mumbai/artifacts/pos/DummyMintableERC721.json\": 701,\n\t\"./testnet/mumbai/artifacts/pos/DummyStateSender.json\": 702,\n\t\"./testnet/mumbai/artifacts/pos/EIP712Base.json\": 703,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155.json\": 704,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Predicate.json\": 705,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155PredicateProxy.json\": 706,\n\t\"./testnet/mumbai/artifacts/pos/ERC1155Receiver.json\": 707,\n\t\"./testnet/mumbai/artifacts/pos/ERC165.json\": 708,\n\t\"./testnet/mumbai/artifacts/pos/ERC20.json\": 709,\n\t\"./testnet/mumbai/artifacts/pos/ERC20Predicate.json\": 710,\n\t\"./testnet/mumbai/artifacts/pos/ERC20PredicateProxy.json\": 711,\n\t\"./testnet/mumbai/artifacts/pos/ERC721.json\": 712,\n\t\"./testnet/mumbai/artifacts/pos/ERC721Predicate.json\": 713,\n\t\"./testnet/mumbai/artifacts/pos/ERC721PredicateProxy.json\": 714,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicate.json\": 715,\n\t\"./testnet/mumbai/artifacts/pos/EtherPredicateProxy.json\": 716,\n\t\"./testnet/mumbai/artifacts/pos/ICheckpointManager.json\": 717,\n\t\"./testnet/mumbai/artifacts/pos/IChildChainManager.json\": 718,\n\t\"./testnet/mumbai/artifacts/pos/IChildToken.json\": 719,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155.json\": 720,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155MetadataURI.json\": 721,\n\t\"./testnet/mumbai/artifacts/pos/IERC1155Receiver.json\": 722,\n\t\"./testnet/mumbai/artifacts/pos/IERC165.json\": 723,\n\t\"./testnet/mumbai/artifacts/pos/IERC20.json\": 724,\n\t\"./testnet/mumbai/artifacts/pos/IERC721.json\": 725,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Enumerable.json\": 726,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Metadata.json\": 727,\n\t\"./testnet/mumbai/artifacts/pos/IERC721Receiver.json\": 728,\n\t\"./testnet/mumbai/artifacts/pos/IERCProxy.json\": 729,\n\t\"./testnet/mumbai/artifacts/pos/IMintableERC721.json\": 730,\n\t\"./testnet/mumbai/artifacts/pos/IRootChainManager.json\": 731,\n\t\"./testnet/mumbai/artifacts/pos/IStateSender.json\": 732,\n\t\"./testnet/mumbai/artifacts/pos/ITokenPredicate.json\": 733,\n\t\"./testnet/mumbai/artifacts/pos/MaticWETH.json\": 734,\n\t\"./testnet/mumbai/artifacts/pos/Merkle.json\": 735,\n\t\"./testnet/mumbai/artifacts/pos/MerklePatriciaTest.json\": 736,\n\t\"./testnet/mumbai/artifacts/pos/Migrations.json\": 737,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155Predicate.json\": 738,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC1155PredicateProxy.json\": 739,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20Predicate.json\": 740,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC20PredicateProxy.json\": 741,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721Predicate.json\": 742,\n\t\"./testnet/mumbai/artifacts/pos/MintableERC721PredicateProxy.json\": 743,\n\t\"./testnet/mumbai/artifacts/pos/MockCheckpointManager.json\": 744,\n\t\"./testnet/mumbai/artifacts/pos/NativeMetaTransaction.json\": 745,\n\t\"./testnet/mumbai/artifacts/pos/NetworkAgnostic.json\": 746,\n\t\"./testnet/mumbai/artifacts/pos/Proxy.json\": 747,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImpl.json\": 748,\n\t\"./testnet/mumbai/artifacts/pos/ProxyTestImplStorageLayoutChange.json\": 749,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManager.json\": 750,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerProxy.json\": 751,\n\t\"./testnet/mumbai/artifacts/pos/RootChainManagerStorage.json\": 752,\n\t\"./testnet/mumbai/artifacts/pos/RootTunnel.json\": 753,\n\t\"./testnet/mumbai/artifacts/pos/UpgradableProxy.json\": 754,\n\t\"./testnet/mumbai/index.json\": 201\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 340;"],"sourceRoot":""}